version: "3"

networks:
  default:
    name: loki

x-logging: &default-logging
  driver: "json-file"
  options:
    max-size: "5m"
    max-file: "3"
    tag: "{{.ImageName}}|{{.Name}}"

x-deploy: &default-deploy
  resources:
    limits:
      memory: 100M

services:
  app-python:
    build: ../app_python
    ports:
      - "8000:5000"
    logging: *default-logging
    deploy: *default-deploy
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8000" ]
      interval: 10s
      timeout: 10s
      retries: 3

  app_golang:
    build: ../app_golang
    volumes:
      - ./logs:/app/logs
    ports:
      - target: 8081
        published: 8081
    logging: *default-logging

  loki:
    image: grafana/loki:2.9.4
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml
    logging: *default-logging
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "wget --no-verbose --tries=1 --spider http://localhost:3100/ready || exit 1"
        ]
      interval: 10s
      timeout: 10s
      retries: 3

  promtail:
    image: grafana/promtail:2.9.4
    volumes:
      - ./promtail.yml:/etc/promtail/config.yml
      - /var/lib/docker/containers:/var/lib/docker/containers
    command: -config.file=/etc/promtail/config.yml
    logging: *default-logging
    deploy: *default-deploy
    healthcheck:
      test: [ "CMD-SHELL", "bash -c ':> /dev/tcp/localhost/9080'" ]
      interval: 10s
      timeout: 10s
      retries: 3

  prometheus:
    image: prom/prometheus:v2.30.1
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
    logging: *default-logging
    deploy: *default-deploy
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "wget --no-verbose --tries=1 --spider http://localhost:9090/status || exit 1"
        ]
      interval: 10s
      timeout: 10s
      retries: 3

  grafana:
    environment:
      - GF_PATHS_PROVISIONING=/etc/grafana/provisioning
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
    entrypoint:
      - sh
      - -euc
      - |
        mkdir -p /etc/grafana/provisioning/datasources
        cat <<EOF > /etc/grafana/provisioning/datasources/ds.yaml
        apiVersion: 1
        datasources:
        - name: Loki
          type: loki
          access: proxy
          orgId: 1
          url: http://loki:3100
          basicAuth: false
          isDefault: true
          version: 1
          editable: false
        EOF
        /run.sh
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    logging: *default-logging
    deploy: *default-deploy
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "wget --no-verbose --tries=1 --spider http://localhost:3000/api/health || exit 1"
        ]
      interval: 10s
      timeout: 10s
      retries: 3