name: Golang

on:
  push:
    branches:
      - "*"
  pull_request:
    branches:
      - "*"

jobs:
  build_go:
    runs-on: ubuntu-latest

    services:
      docker:
        image: docker
        options: --privileged

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install Snyk CLI
        run: npm install snyk -g

      - name: Cache Go dependencies
        uses: actions/cache@v2
        with:
          path: ~/.cache/go-build
          key: ${{ runner.os }}-go-${{ hashFiles('app_golang/go.mod') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: "1.21"

      - name: Install dependencies
        working-directory: "app_golang"
        run: go mod tidy

      - name: Build
        working-directory: 'app_golang'
        run: |
          go build ./main.go

      - name: Lint code
        working-directory: "app_golang"
        run: |
          curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin latest
          golangci-lint run './...'

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: ~/.docker
          key: ${{ runner.os }}-docker-${{ github.sha }}
          restore-keys: ${{ runner.os }}-docker-

      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Docker image
        run: |
          docker build -t dzendos/app_golang:latest 'app_golang/'
          docker push dzendos/app_golang:latest

      - name: Run tests
        working-directory: "app_golang"
        run: |
          go test -v ./...

  security:
    runs-on: ubuntu-latest

    needs:
      - build

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/golang@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --skip-unresolved app_golang
